{
	"name": "vscode-powerquery",
	"displayName": "Power Query / M Language",
	"description": "Language service for the Power Query / M formula language",
	"main": "./client/dist/extension",
	"types": "./client/dist/extension.d.ts",
	"scripts": {
		"audit": "npm audit fix && npm run audit:client && npm run audit:server && npm run audit:scripts",
		"audit:client": "cd client && npm audit",
		"audit:fix": "npm audit fix && npm run audit:fix:client && npm run audit:fix:server && npm run audit:fix:scripts",
		"audit:fix:client": "cd client && npm audit fix",
		"audit:fix:scripts": "cd scripts && npm audit fix",
		"audit:fix:server": "cd server && npm audit fix",
		"audit:scripts": "cd scripts && npm audit",
		"audit:server": "cd server && npm audit",
		"build": "npm run build:client && npm run build:server && npm run build:scripts",
		"build:client": "cd client && npm run build",
		"build:scripts": "cd scripts && npm run build",
		"build:server": "cd server && npm run build",
		"install:client": "cd client && npm install-clean",
		"install:scripts": "cd scripts && npm install-clean",
		"install:server": "cd server && npm install-clean",
		"link:start": "npm run link:start:client && npm run link:start:server && npm run link:start:scripts",
		"link:start:client": "cd client && npm run link:start",
		"link:start:scripts": "cd scripts && npm run link:start",
		"link:start:server": "cd server && npm run link:start",
		"link:stop": "npm run link:stop:client && npm run link:stop:server && npm run link:stop:scripts",
		"link:stop:client": "cd client && npm run link:stop",
		"link:stop:scripts": "cd scripts && npm run link:stop",
		"link:stop:server": "cd server && npm run link:stop",
		"test:client": "cd client && npm run test",
		"test:server": "cd server && npm run test",
		"version": "npm version patch && npm run version:client && npm run version:server && npm run version:scripts",
		"version:client": "cd client && npm version patch",
		"version:scripts": "cd scripts && npm version patch",
		"version:server": "cd server && npm version patch",
		"vsix": "vsce package",
		"webpack-dev": "npm run webpack-dev:client && npm run webpack-dev:server",
		"webpack-dev:client": "cd client && npm run webpack-dev",
		"webpack-dev:server:": "cd server && npm run webpack-dev",
		"webpack-prod": "npm run webpack-prod:server && npm run webpack-prod:client",
		"webpack-prod:client": "cd client && npm run webpack-prod",
		"webpack-prod:server": "cd server && npm run webpack-prod"
	},
	"contributes": {
		"commands": [
			{
				"category": "powerquery",
				"command": "powerquery.extractDataflowDocument",
				"title": "Extract document from dataflow.json"
			},
			{
				"category": "powerquery",
				"command": "powerquery.mEscapeText",
				"title": "Encode selection as an M text value"
			},
			{
				"category": "powerquery",
				"command": "powerquery.mUnescapeText",
				"title": "Remove M text encoding from selection"
			},
			{
				"category": "powerquery",
				"command": "powerquery.jsonUnescapeText",
				"title": "Remove JSON string encoding from selection"
			},
			{
				"category": "powerquery",
				"command": "powerquery.jsonEscapeText",
				"title": "Encode selection as a JSON value"
			}
		],
		"configuration": {
			"properties": {
				"powerquery.benchmark.enable": {
					"default": false,
					"description": "Recommended always off. Enables benchmark traces to be generated for the extension.",
					"scope": "window",
					"type": "boolean"
				},
				"powerquery.client.additionalSymbolsDirectories": {
					"examples": [
						"c:\\PowerQuerySymbols\\"
					],
					"items": {
						"type": "string"
					},
					"markdownDescription": "One or more absolute file system paths to directories containing M language symbols in json format.",
					"scope": "machine-overridable",
					"type": "array"
				},
				"powerquery.diagnostics.isWorkspaceCacheAllowed": {
					"default": true,
					"description": "Recommended always on. Toggles internal caching causing performance degregation when off. Used to find hot paths in the extension.",
					"scope": "window",
					"type": "boolean"
				},
				"powerquery.diagnostics.typeStrategy": {
					"default": "Primitive",
					"description": "Sets what strategy is used by the type analysis. Extended is useful for small scripts but can hang on larger, complicated files. If performance isn't acceptable then fallback to Primitive.",
					"enum": [
						"Extended",
						"Primitive"
					],
					"scope": "window",
					"type": "string"
				},
				"powerquery.editor.transformTarget": {
					"default": "inPlace",
					"description": "Default target for text transformation operations - allows the choice of in place (replacing the currently selected text) or storing the results on the clipboard.",
					"enum": [
						"inPlace",
						"clipboard"
					],
					"scope": "window",
					"type": "string"
				},
				"powerquery.general.experimental": {
					"default": false,
					"description": "Specifies whether to enable experimental features.",
					"scope": "window",
					"type": "boolean"
				},
				"powerquery.general.locale": {
					"default": "en-US",
					"description": "Locale to use for errors and other messages returned by the language parser.",
					"enum": [
						"bg-BG",
						"ca-EZ",
						"cs-CZ",
						"da-DK",
						"de-DE",
						"el-GR",
						"en-US",
						"es-ES",
						"et-EE",
						"eu-ES",
						"fi-FI",
						"fr-FR",
						"gl-ES",
						"hi-IN",
						"hr-HR",
						"hu-HU",
						"id-ID",
						"it-IT",
						"ja-JP",
						"kk-KZ",
						"ko-KR",
						"lt-LT",
						"lv-LV",
						"ms-MY",
						"nb-NO",
						"nl-NL",
						"pl-PL",
						"pt-BR",
						"pt-PT",
						"ro-RO",
						"ru-RU",
						"sk-SK",
						"sl-SI",
						"sr-Cyrl-RS",
						"sr-Latn-RS",
						"sv-SE",
						"th-TH",
						"tr-TR",
						"uk-UA",
						"vi-VN",
						"zh-CN",
						"zh-TW"
					],
					"scope": "window",
					"type": "string"
				},
				"powerquery.general.mode": {
					"default": "Power Query",
					"description": "Changes what library functions are available.",
					"enum": [
						"Power Query",
						"SDK"
					],
					"scope": "window",
					"type": "string"
				},
				"powerquery.timeout.symbolTimeoutInMs": {
					"default": 2000,
					"description": "Symbol provider timeout in milliseconds.",
					"scope": "window",
					"type": "number"
				},
				"powerquery.trace.server": {
					"default": "off",
					"description": "Traces the communication between VS Code and the language server.",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"scope": "window",
					"type": "string"
				}
			},
			"title": "Power Query",
			"type": "object"
		},
		"grammars": [
			{
				"language": "powerquery",
				"path": "./syntaxes/powerquery.tmLanguage.json",
				"scopeName": "source.powerquery"
			}
		],
		"languages": [
			{
				"aliases": [
					"Power Query Formula Language",
					"Power Query/M",
					"Power Query",
					"powerquery",
					"pq",
					"M"
				],
				"configuration": "./language-configuration.json",
				"extensions": [
					".pq",
					".pqout",
					".pqm",
					".m",
					".mout"
				],
				"id": "powerquery"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "powerquery.extractDataflowDocument",
					"when": "editorIsOpen && editorLangId == json"
				},
				{
					"command": "powerquery.mEscapeText",
					"when": "editorHasSelection"
				},
				{
					"command": "powerquery.mUnescapeText",
					"when": "editorHasSelection"
				},
				{
					"command": "powerquery.jsonUnescapeText",
					"when": "editorHasSelection"
				},
				{
					"command": "powerquery.jsonEscapeText",
					"when": "editorHasSelection"
				}
			]
		}
	},
	"activationEvents": [],
	"devDependencies": {},
	"icon": "imgs/PQIcon_256.png",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		}
	},
	"issues": {
		"url": "https://github.com/microsoft/vscode-powerquery/issues"
	}
}
